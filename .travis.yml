language: cpp
dist: xenial
if: branch = master

notifications:
  email: false

addons:
  apt:
    sources: &defSrcs
      - ubuntu-toolchain-r-test
    packages: &defPackages
      - g++-6
      - cmake
      - cmake-data
      - libminiupnpc-dev
      - cmake
      - cmake-data
  homebrew:
    packages:
      - miniupnpc

cache:
  ccache: true
  directories:
    - ${HOME}/.cache/libutil
    - ${HOME}/.cache/libendian

jobs:
  include:
    - os: linux
      compiler: gcc
      env: MATRIX_EVAL="CXX=g++-6 && CC=gcc-6" GCOV=gcov-6 BUILD_TYPE=Debug RTTR_COVERAGE=1
      addons:
        apt:
          sources: *defSrcs
          packages: [*defPackages, lcov]
    - os: linux
      compiler: gcc
      env: MATRIX_EVAL="CXX=g++-6 && CC=gcc-6" BUILD_TYPE=Release
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      compiler: clang
      env: BUILD_TYPE=Debug

before_install:
  - eval "${MATRIX_EVAL}"
  - DEPS_DIR="${HOME}/.cache"
  - mkdir -p "${DEPS_DIR}"

install:
  - |
    export LIBUTIL_DIR="$DEPS_DIR/libutil"
    [ ! -d "$LIBUTIL_DIR/src" ] && git clone https://github.com/Return-To-The-Roots/libutil.git "$LIBUTIL_DIR" || true
    (cd ${LIBUTIL_DIR} && git clean -fxd && git checkout master && git fetch --all && git reset --hard origin/master)

    export LIBENDIAN_DIR="$DEPS_DIR/libendian"
    [ ! -d "$LIBENDIAN_DIR/src" ] && git clone https://github.com/Return-To-The-Roots/libendian.git "$LIBENDIAN_DIR" || true
    (cd ${LIBENDIAN_DIR} && git clean -fxd && git checkout master && git fetch && git reset --hard origin/master)
  - |
    BOOST_VERSION=1.64.0
    BOOST_DIR="${DEPS_DIR}/boost${BOOST_VERSION}"
    export ADDITIONAL_CMAKE_FLAGS="${ADDITIONAL_CMAKE_FLAGS} -DBOOST_ROOT=${BOOST_DIR} -DBoost_NO_SYSTEM_PATHS=ON"
    tools/travis-ci/installBoost.sh "${BOOST_VERSION}" "${BOOST_DIR}"
  - |
    if [ "${RTTR_COVERAGE}" = "1" ]; then
      # Install coveralls tool
      gem install coveralls-lcov

      export ADDITIONAL_CMAKE_FLAGS="${ADDITIONAL_CMAKE_FLAGS} -DRTTR_ENABLE_COVERAGE=ON"
    fi

script: tools/travis-ci/build.sh "${BUILD_TYPE}" "${ADDITIONAL_CMAKE_FLAGS}"

after_success:
  - |
    if [ "$RTTR_COVERAGE" = "1" ]; then
      lcov --gcov-tool $GCOV --directory build --capture --output-file coverage.info --rc lcov_branch_coverage=1 > /dev/null
      # Remove unrelated stuff
      lcov --gcov-tool $GCOV --remove coverage.info '/usr/*' '*/examples/*' "${HOME}/"'.cache/*' --output-file coverage.info > /dev/null
      # Debug output
      lcov --list coverage.info
      # Coverage.io
      bash <(curl -s https://codecov.io/bash) -f coverage.info
      # Coveralls
      coveralls-lcov coverage.info
    fi
